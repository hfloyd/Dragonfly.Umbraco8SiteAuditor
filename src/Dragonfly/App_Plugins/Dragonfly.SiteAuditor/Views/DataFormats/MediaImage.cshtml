@using Dragonfly.UmbracoModels.Helpers
@using Dragonfly.UmbracoHelpers
@using Dragonfly.UmbracoModels
@using Umbraco.Core.Logging

@inherits UmbracoViewPage<Umbraco.Core.Models.Property>

@{
    var fancyFormat = Mvc.GetSafeViewDataBool(ViewData, "FancyFormat", true);
    var imageWidth = Mvc.GetSafeViewDataInt(ViewData, "ImageWidth", 300);
    //var umbracoHelper = new UmbracoHelper(UmbracoContext.Current);

    var value = Model.GetValue();
    if (value != null)
    {
        var udi = Udi.Parse(value.ToString());
        var iPubMedia = Umbraco.Content(udi);
       
        if (iPubMedia.Url() != "")
        {
            if (fancyFormat)
            {
                var mediaPath = Development.MediaPath(iPubMedia);
                <img src="@iPubMedia.Url()" width="@imageWidth"/>
                <div>@mediaPath</div>
                <div><small>@iPubMedia.Url()</small></div>
            }
            else
            {
                @iPubMedia.Url()
            }
        }
        else
        {
            <i>none</i>
        }
    }
}
