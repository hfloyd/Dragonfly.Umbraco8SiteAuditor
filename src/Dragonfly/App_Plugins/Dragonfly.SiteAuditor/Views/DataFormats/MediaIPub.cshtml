@using System.Web;
@using System.Web.Mvc;
@using Umbraco.Core.Models;
@using Umbraco.Core.Models.PublishedContent;
@using Dragonfly.SiteAuditor.Models;
@using Umbraco.Web;
@using Dragonfly.UmbracoHelpers;
@using ImageProcessor.Imaging.Formats;
@using Umbraco.Web.Composing

@model IPublishedContent

@{
    IPublishedContent iPubMedia = Model;
    var fancyFormat = Mvc.GetSafeViewDataBool(ViewData, "FancyFormat", true);
    var imageWidth = Mvc.GetSafeViewDataInt(ViewData, "ImageWidth", 300);
    var umbracoHelper = Current.UmbracoHelper;
    
    if (iPubMedia.Url() != "")
    {
        if (fancyFormat)
        {
            var mediaPath = Development.MediaPath(iPubMedia);
            if (IsImage(iPubMedia))
            {
                <img src="@iPubMedia.Url()" width="@imageWidth" />
            }
            <div>@mediaPath</div>
            <div><small>@iPubMedia.Url()</small></div>
        }
        else
        {
            @iPubMedia.Url()
        }
    }
    else
    {
        <i>none</i>
    }

}
@functions
{
    bool IsImage(IPublishedContent IPub)
    {
        var imgTypes = new List<string>()
    {
            {".png"}
            ,{".jpg"}
            ,{".jpeg"}
            ,{".gif"}
            ,{".svg"}
        };

        var extension = IPub.Value<string>("umbracoExtension");
        if (imgTypes.Contains(extension))
        { return true; }

        return false;
    }
}

